// @generated
// This file is generated with ~/scripts/generate-highlighting.js
// Do not edit directly, please edit the script instead.

import type { HLJSApi } from "highlight.js";
import hljs_ from "highlight.js";
import "~/styles/hljs.css";

let hljs = hljs_;

const registeredLanguages: string[] = [];

const languageModules = new Map([
  ["1c", () => import("highlight.js/lib/languages/1c")],
  ["abnf", () => import("highlight.js/lib/languages/abnf")],
  ["accesslog", () => import("highlight.js/lib/languages/accesslog")],
  ["actionscript", () => import("highlight.js/lib/languages/actionscript")],
  ["ada", () => import("highlight.js/lib/languages/ada")],
  ["angelscript", () => import("highlight.js/lib/languages/angelscript")],
  ["apache", () => import("highlight.js/lib/languages/apache")],
  ["applescript", () => import("highlight.js/lib/languages/applescript")],
  ["arcade", () => import("highlight.js/lib/languages/arcade")],
  ["arduino", () => import("highlight.js/lib/languages/arduino")],
  ["armasm", () => import("highlight.js/lib/languages/armasm")],
  ["xml", () => import("highlight.js/lib/languages/xml")],
  ["asciidoc", () => import("highlight.js/lib/languages/asciidoc")],
  ["aspectj", () => import("highlight.js/lib/languages/aspectj")],
  ["autohotkey", () => import("highlight.js/lib/languages/autohotkey")],
  ["autoit", () => import("highlight.js/lib/languages/autoit")],
  ["avrasm", () => import("highlight.js/lib/languages/avrasm")],
  ["awk", () => import("highlight.js/lib/languages/awk")],
  ["axapta", () => import("highlight.js/lib/languages/axapta")],
  ["bash", () => import("highlight.js/lib/languages/bash")],
  ["basic", () => import("highlight.js/lib/languages/basic")],
  ["bnf", () => import("highlight.js/lib/languages/bnf")],
  ["brainfuck", () => import("highlight.js/lib/languages/brainfuck")],
  ["c", () => import("highlight.js/lib/languages/c")],
  ["cal", () => import("highlight.js/lib/languages/cal")],
  ["capnproto", () => import("highlight.js/lib/languages/capnproto")],
  ["ceylon", () => import("highlight.js/lib/languages/ceylon")],
  ["clean", () => import("highlight.js/lib/languages/clean")],
  ["clojure", () => import("highlight.js/lib/languages/clojure")],
  ["clojure-repl", () => import("highlight.js/lib/languages/clojure-repl")],
  ["cmake", () => import("highlight.js/lib/languages/cmake")],
  ["coffeescript", () => import("highlight.js/lib/languages/coffeescript")],
  ["coq", () => import("highlight.js/lib/languages/coq")],
  ["cos", () => import("highlight.js/lib/languages/cos")],
  ["cpp", () => import("highlight.js/lib/languages/cpp")],
  ["crmsh", () => import("highlight.js/lib/languages/crmsh")],
  ["crystal", () => import("highlight.js/lib/languages/crystal")],
  ["csharp", () => import("highlight.js/lib/languages/csharp")],
  ["csp", () => import("highlight.js/lib/languages/csp")],
  ["css", () => import("highlight.js/lib/languages/css")],
  ["d", () => import("highlight.js/lib/languages/d")],
  ["markdown", () => import("highlight.js/lib/languages/markdown")],
  ["dart", () => import("highlight.js/lib/languages/dart")],
  ["delphi", () => import("highlight.js/lib/languages/delphi")],
  ["diff", () => import("highlight.js/lib/languages/diff")],
  ["django", () => import("highlight.js/lib/languages/django")],
  ["dns", () => import("highlight.js/lib/languages/dns")],
  ["dockerfile", () => import("highlight.js/lib/languages/dockerfile")],
  ["dos", () => import("highlight.js/lib/languages/dos")],
  ["dsconfig", () => import("highlight.js/lib/languages/dsconfig")],
  ["dts", () => import("highlight.js/lib/languages/dts")],
  ["dust", () => import("highlight.js/lib/languages/dust")],
  ["ebnf", () => import("highlight.js/lib/languages/ebnf")],
  ["elixir", () => import("highlight.js/lib/languages/elixir")],
  ["elm", () => import("highlight.js/lib/languages/elm")],
  ["ruby", () => import("highlight.js/lib/languages/ruby")],
  ["erb", () => import("highlight.js/lib/languages/erb")],
  ["erlang-repl", () => import("highlight.js/lib/languages/erlang-repl")],
  ["erlang", () => import("highlight.js/lib/languages/erlang")],
  ["excel", () => import("highlight.js/lib/languages/excel")],
  ["fix", () => import("highlight.js/lib/languages/fix")],
  ["flix", () => import("highlight.js/lib/languages/flix")],
  ["fortran", () => import("highlight.js/lib/languages/fortran")],
  ["fsharp", () => import("highlight.js/lib/languages/fsharp")],
  ["gams", () => import("highlight.js/lib/languages/gams")],
  ["gauss", () => import("highlight.js/lib/languages/gauss")],
  ["gcode", () => import("highlight.js/lib/languages/gcode")],
  ["gherkin", () => import("highlight.js/lib/languages/gherkin")],
  ["glsl", () => import("highlight.js/lib/languages/glsl")],
  ["gml", () => import("highlight.js/lib/languages/gml")],
  ["go", () => import("highlight.js/lib/languages/go")],
  ["golo", () => import("highlight.js/lib/languages/golo")],
  ["gradle", () => import("highlight.js/lib/languages/gradle")],
  ["graphql", () => import("highlight.js/lib/languages/graphql")],
  ["groovy", () => import("highlight.js/lib/languages/groovy")],
  ["haml", () => import("highlight.js/lib/languages/haml")],
  ["handlebars", () => import("highlight.js/lib/languages/handlebars")],
  ["haskell", () => import("highlight.js/lib/languages/haskell")],
  ["haxe", () => import("highlight.js/lib/languages/haxe")],
  ["hsp", () => import("highlight.js/lib/languages/hsp")],
  ["http", () => import("highlight.js/lib/languages/http")],
  ["hy", () => import("highlight.js/lib/languages/hy")],
  ["inform7", () => import("highlight.js/lib/languages/inform7")],
  ["ini", () => import("highlight.js/lib/languages/ini")],
  ["irpf90", () => import("highlight.js/lib/languages/irpf90")],
  ["isbl", () => import("highlight.js/lib/languages/isbl")],
  ["java", () => import("highlight.js/lib/languages/java")],
  ["javascript", () => import("highlight.js/lib/languages/javascript")],
  ["jboss-cli", () => import("highlight.js/lib/languages/jboss-cli")],
  ["json", () => import("highlight.js/lib/languages/json")],
  ["julia", () => import("highlight.js/lib/languages/julia")],
  ["julia-repl", () => import("highlight.js/lib/languages/julia-repl")],
  ["kotlin", () => import("highlight.js/lib/languages/kotlin")],
  ["lasso", () => import("highlight.js/lib/languages/lasso")],
  ["latex", () => import("highlight.js/lib/languages/latex")],
  ["ldif", () => import("highlight.js/lib/languages/ldif")],
  ["leaf", () => import("highlight.js/lib/languages/leaf")],
  ["less", () => import("highlight.js/lib/languages/less")],
  ["lisp", () => import("highlight.js/lib/languages/lisp")],
  ["livecodeserver", () => import("highlight.js/lib/languages/livecodeserver")],
  ["livescript", () => import("highlight.js/lib/languages/livescript")],
  ["llvm", () => import("highlight.js/lib/languages/llvm")],
  ["lsl", () => import("highlight.js/lib/languages/lsl")],
  ["lua", () => import("highlight.js/lib/languages/lua")],
  ["makefile", () => import("highlight.js/lib/languages/makefile")],
  ["mathematica", () => import("highlight.js/lib/languages/mathematica")],
  ["matlab", () => import("highlight.js/lib/languages/matlab")],
  ["maxima", () => import("highlight.js/lib/languages/maxima")],
  ["mel", () => import("highlight.js/lib/languages/mel")],
  ["mercury", () => import("highlight.js/lib/languages/mercury")],
  ["mipsasm", () => import("highlight.js/lib/languages/mipsasm")],
  ["mizar", () => import("highlight.js/lib/languages/mizar")],
  ["perl", () => import("highlight.js/lib/languages/perl")],
  ["mojolicious", () => import("highlight.js/lib/languages/mojolicious")],
  ["monkey", () => import("highlight.js/lib/languages/monkey")],
  ["moonscript", () => import("highlight.js/lib/languages/moonscript")],
  ["n1ql", () => import("highlight.js/lib/languages/n1ql")],
  ["nestedtext", () => import("highlight.js/lib/languages/nestedtext")],
  ["nginx", () => import("highlight.js/lib/languages/nginx")],
  ["nim", () => import("highlight.js/lib/languages/nim")],
  ["nix", () => import("highlight.js/lib/languages/nix")],
  ["node-repl", () => import("highlight.js/lib/languages/node-repl")],
  ["nsis", () => import("highlight.js/lib/languages/nsis")],
  ["objectivec", () => import("highlight.js/lib/languages/objectivec")],
  ["ocaml", () => import("highlight.js/lib/languages/ocaml")],
  ["openscad", () => import("highlight.js/lib/languages/openscad")],
  ["oxygene", () => import("highlight.js/lib/languages/oxygene")],
  ["parser3", () => import("highlight.js/lib/languages/parser3")],
  ["pf", () => import("highlight.js/lib/languages/pf")],
  ["pgsql", () => import("highlight.js/lib/languages/pgsql")],
  ["php", () => import("highlight.js/lib/languages/php")],
  ["php-template", () => import("highlight.js/lib/languages/php-template")],
  ["plaintext", () => import("highlight.js/lib/languages/plaintext")],
  ["pony", () => import("highlight.js/lib/languages/pony")],
  ["powershell", () => import("highlight.js/lib/languages/powershell")],
  ["processing", () => import("highlight.js/lib/languages/processing")],
  ["profile", () => import("highlight.js/lib/languages/profile")],
  ["prolog", () => import("highlight.js/lib/languages/prolog")],
  ["properties", () => import("highlight.js/lib/languages/properties")],
  ["protobuf", () => import("highlight.js/lib/languages/protobuf")],
  ["puppet", () => import("highlight.js/lib/languages/puppet")],
  ["purebasic", () => import("highlight.js/lib/languages/purebasic")],
  ["python", () => import("highlight.js/lib/languages/python")],
  ["python-repl", () => import("highlight.js/lib/languages/python-repl")],
  ["q", () => import("highlight.js/lib/languages/q")],
  ["qml", () => import("highlight.js/lib/languages/qml")],
  ["r", () => import("highlight.js/lib/languages/r")],
  ["reasonml", () => import("highlight.js/lib/languages/reasonml")],
  ["rib", () => import("highlight.js/lib/languages/rib")],
  ["roboconf", () => import("highlight.js/lib/languages/roboconf")],
  ["routeros", () => import("highlight.js/lib/languages/routeros")],
  ["rsl", () => import("highlight.js/lib/languages/rsl")],
  ["ruleslanguage", () => import("highlight.js/lib/languages/ruleslanguage")],
  ["rust", () => import("highlight.js/lib/languages/rust")],
  ["sas", () => import("highlight.js/lib/languages/sas")],
  ["scala", () => import("highlight.js/lib/languages/scala")],
  ["scheme", () => import("highlight.js/lib/languages/scheme")],
  ["scilab", () => import("highlight.js/lib/languages/scilab")],
  ["scss", () => import("highlight.js/lib/languages/scss")],
  ["shell", () => import("highlight.js/lib/languages/shell")],
  ["smali", () => import("highlight.js/lib/languages/smali")],
  ["smalltalk", () => import("highlight.js/lib/languages/smalltalk")],
  ["sml", () => import("highlight.js/lib/languages/sml")],
  ["sqf", () => import("highlight.js/lib/languages/sqf")],
  ["sql", () => import("highlight.js/lib/languages/sql")],
  ["stan", () => import("highlight.js/lib/languages/stan")],
  ["stata", () => import("highlight.js/lib/languages/stata")],
  ["step21", () => import("highlight.js/lib/languages/step21")],
  ["stylus", () => import("highlight.js/lib/languages/stylus")],
  ["subunit", () => import("highlight.js/lib/languages/subunit")],
  ["swift", () => import("highlight.js/lib/languages/swift")],
  ["taggerscript", () => import("highlight.js/lib/languages/taggerscript")],
  ["yaml", () => import("highlight.js/lib/languages/yaml")],
  ["tap", () => import("highlight.js/lib/languages/tap")],
  ["tcl", () => import("highlight.js/lib/languages/tcl")],
  ["thrift", () => import("highlight.js/lib/languages/thrift")],
  ["tp", () => import("highlight.js/lib/languages/tp")],
  ["twig", () => import("highlight.js/lib/languages/twig")],
  ["typescript", () => import("highlight.js/lib/languages/typescript")],
  ["vala", () => import("highlight.js/lib/languages/vala")],
  ["vbnet", () => import("highlight.js/lib/languages/vbnet")],
  ["vbscript", () => import("highlight.js/lib/languages/vbscript")],
  ["vbscript-html", () => import("highlight.js/lib/languages/vbscript-html")],
  ["verilog", () => import("highlight.js/lib/languages/verilog")],
  ["vhdl", () => import("highlight.js/lib/languages/vhdl")],
  ["vim", () => import("highlight.js/lib/languages/vim")],
  ["wasm", () => import("highlight.js/lib/languages/wasm")],
  ["wren", () => import("highlight.js/lib/languages/wren")],
  ["x86asm", () => import("highlight.js/lib/languages/x86asm")],
  ["xl", () => import("highlight.js/lib/languages/xl")],
  ["xquery", () => import("highlight.js/lib/languages/xquery")],
  ["zephir", () => import("highlight.js/lib/languages/zephir")],
]);

const languageAliases = new Map(
  [
    "actionscript as",
    "angelscript asc",
    "apache apacheconf",
    "applescript osascript",
    "arduino ino",
    "armasm arm",
    "xml html xhtml rss atom xjb xsd xsl plist wsf svg",
    "asciidoc adoc",
    "autohotkey ahk",
    "axapta x++",
    "bash sh",
    "brainfuck bf",
    "c h",
    "capnproto capnp",
    "clean icl dcl",
    "clojure clj edn",
    "cmake cmake.in",
    "coffeescript coffee cson iced",
    "cos cls",
    "cpp cc c++ h++ hpp hh hxx cxx",
    "crmsh crm pcmk",
    "crystal cr",
    "csharp cs c#",
    "markdown md mkdown mkd",
    "delphi dpr dfm pas pascal",
    "diff patch",
    "django jinja",
    "dns bind zone",
    "dockerfile docker",
    "dos bat cmd",
    "dust dst",
    "elixir ex exs",
    "ruby rb gemspec podspec thor irb",
    "erlang erl",
    "excel xlsx xls",
    "fortran f90 f95",
    "fsharp fs f#",
    "gams gms",
    "gauss gss",
    "gcode nc",
    "gherkin feature",
    "go golang",
    "graphql gql",
    "handlebars hbs html.hbs html.handlebars htmlbars",
    "haskell hs",
    "haxe hx",
    "http https",
    "hy hylang",
    "inform7 i7",
    "ini toml",
    "java jsp",
    "javascript js jsx mjs cjs",
    "jboss-cli wildfly-cli",
    "julia-repl jldoctest",
    "kotlin kt kts",
    "lasso ls lassoscript",
    "latex tex",
    "livescript ls",
    "makefile mk mak make",
    "mathematica mma wl",
    "mercury m moo",
    "mipsasm mips",
    "perl pl pm",
    "moonscript moon",
    "nestedtext nt",
    "nginx nginxconf",
    "nix nixos",
    "objectivec mm objc obj-c obj-c++ objective-c++",
    "ocaml ml",
    "openscad scad",
    "pf pf.conf",
    "pgsql postgres postgresql",
    "plaintext text txt",
    "powershell pwsh ps ps1",
    "processing pde",
    "protobuf proto",
    "puppet pp",
    "purebasic pb pbi",
    "python py gyp ipython",
    "python-repl pycon",
    "q k kdb",
    "qml qt",
    "reasonml re",
    "roboconf graph instances",
    "routeros mikrotik",
    "rust rs",
    "scheme scm",
    "scilab sci",
    "shell console shellsession",
    "smalltalk st",
    "sml ml",
    "stan stanfuncs",
    "stata do ado",
    "step21 p21 step stp",
    "stylus styl",
    "yaml yml",
    "tcl tk",
    "twig craftcms",
    "typescript ts tsx mts cts",
    "vbnet vb",
    "vbscript vbs",
    "verilog v sv svh",
    "xl tao",
    "xquery xpath xq xqm",
    "zephir zep",
  ].flatMap((it) => {
    const [name, ...aliases] = it.split(" ");
    return aliases.map((it) => [it, name] as const);
  }),
);

const languageDependencies = new Map(
  [
    "xml css javascript handlebars",
    "asciidoc xml",
    "clojure-repl clojure",
    "coffeescript javascript",
    "cos sql javascript xml",
    "markdown xml",
    "dart markdown",
    "django xml",
    "dockerfile bash",
    "dust xml",
    "erb xml ruby",
    "haml ruby",
    "handlebars xml",
    "javascript xml css graphql",
    "julia-repl julia",
    "livescript javascript",
    "perl mojolicious",
    "mojolicious xml perl",
    "node-repl javascript",
    "parser3 xml",
    "pgsql perl python tcl r lua java php ruby bash scheme xml json",
    "php-template xml php",
    "python-repl python",
    "qml xml",
    "shell bash",
    "yaml ruby",
    "tap yaml",
    "twig xml",
    "typescript xml css graphql",
    "vbscript-html xml vbscript",
    "xquery xml",
  ].map((it) => {
    const [name, ...deps] = it.split(" ");
    return [name, deps] as const;
  }),
);

async function registerLanguage(hljs: HLJSApi, language: string) {
  async function register(language: string) {
    if (hljs.getLanguage(language)) return;
    const importModule = languageModules.get(language);
    if (!importModule) return;
    const module = await importModule();
    hljs.registerLanguage(language, module.default);
    registeredLanguages.push(language);
  }

  const languages = [language];
  const scanned = new Set<string>();

  function findAndRegisterDependencies(language: string) {
    if (scanned.has(language)) return;
    scanned.add(language);

    const dependencies = languageDependencies.get(language);
    for (const dependency of dependencies ?? []) {
      languages.push(dependency);
      findAndRegisterDependencies(dependency);
    }
  }
  findAndRegisterDependencies(language);

  await Promise.all(languages.map((it) => register(it)));
  registeredLanguages.push(...languages);
}

export function highlightCode(content: string, language?: string) {
  if (import.meta.server) return;

  if (!language) return;
  const name = languageAliases.get(language) ?? language;
  if (!languageModules.has(name)) return;

  if (!hljs) {
    import("highlight.js/lib/core").then((module) => {
      hljs = module.default;
    });
    return;
  }

  if (!registeredLanguages.includes(name)) {
    registerLanguage(hljs, name);
    return;
  }

  return hljs.highlight(content, {
    language: name,
    ignoreIllegals: true,
  });
}
